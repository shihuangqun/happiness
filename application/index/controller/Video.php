<?php
namespace app\index\controller;

use addons\wechat\library\Config as ConfigService;
use app\common\controller\Frontend;
use fast\Http;
use fast\Random;
use think\Cache;
use think\Db;
use think\Session;
use think\Validate;
use EasyWeChat\Foundation\Application;

class Video extends Frontend{

    protected $noNeedLogin = ['*'];
    protected $appId = null;
    protected $appSecret = null;

    public function _initialize()
    {

        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 视频页
     * @param int   id  课程ID
     */
    public function index(){
//        $wechat = new \addons\wechat\controller\Index();
//        $subscribe = $wechat->getSubscribe();

        $id = input('course_id');
        $course = Db::name('course')->where('id',$id)->field('title,coursecontent,image,id')->find();
        $chapter = Db::name('chapter')
            ->where('course_id',$id)
            ->order('weigh desc')
            ->select();//章节  默认显示第一条
//        dump($topn);

        $chapter_id = input('chapter_id');//播放列表传来的ID

        if(!empty($chapter_id)){
            $one = Db::name('chapter')
                ->where('course_id',$id)
                ->where('id',$chapter_id)
                ->order('weigh desc')
                ->find();//按照降序排序 取默认第一
            $top = Db::name('chapter')
                ->where('course_id',$id)
                ->where('id','>',$one['id'])
                ->order('weigh desc')
                ->limit('0,1')
                ->find();
            $next = Db::name('chapter')
                ->where('course_id',$id)
                ->where('id','<',$one['id'])
                ->order('weigh desc')
                ->limit('0,1')
                ->find();

            $comment = Db::name('comment_chapter')
                ->where('chapter_status',1)
                ->where('course_id',$one['course_id'])
                ->where('chapter_id',$chapter_id)
                ->alias('c')
                ->join('userinfo u','u.id = c.user_id')
                ->field('c.*,u.nickname,u.avatar')
                ->select();//需要增加章节ID判断
        }else{
            $one = Db::name('chapter')
                ->where('course_id',$id)
                ->order('weigh desc')
                ->find();//按照降序排序 取默认第一


            $top = Db::name('chapter')
                ->where('course_id',$id)
                ->where('id','>',$one['id'])
                ->order('weigh desc')
                ->limit('0,1')
                ->find();
            $next = Db::name('chapter')
                ->where('course_id',$id)
                ->where('id','<',$one['id'])
                ->order('weigh desc')
                ->limit('0,1')
                ->find();
            $comment = Db::name('comment_chapter')
                ->where('chapter_status',1)
                ->where('course_id',$one['course_id'])
                ->alias('c')
                ->join('userinfo u','u.id = c.user_id')
                ->field('c.*,u.nickname,u.avatar')
                ->select();//需要增加章节ID判断
        }

        $recommend = Db::name('course')->where('id','neq',$id)->select();//相关推荐

        $user = $this->getUserInfo();//获取当前用户

        $grade = Db::name('order')
            ->where('user_id',$user['id'])
            ->where('order_status','neq','0')
            ->alias('o')
            ->join('course c','c.id = o.course_id')
            ->field('type')
            ->find();//查看当前等级

        $is_height = Db::name('order')
            ->where('user_id',$user['id'])
            ->where('order_status','neq','0')
            ->alias('o')
            ->join('course c','c.id = o.course_id')
            ->where('c.type','2')//为2  等于高级用户 则可以免费学习中级
            ->field('type')
            ->find();


        $this->assign([
            'chapter' => $chapter,
            'recommend' => $recommend,
            'one' => $one,
            'comment' => $comment,
            'user' => $user,
            'course' => $course,
            'grade' => $grade,
            'is_height' => $is_height,
            'top' => $top,
            'next' => $next

        ]);
        return $this->fetch();
    }

    /**
     * 课程介绍页
     */
    public function desc($config = ''){

        $course_id = input('course_id');

        $course = Db::name('course')->where('id',$course_id)->find();//课程信息
//        dump($course);
        $chapter = Db::name('chapter')->where('course_id',$course_id)->order('weigh desc')->select();//获取章节信息

        $authstatus = $this->is_auth();//是否认证

        $info = $this->getUserInfo();

        $this->assign([
            'course' => $course,
            'chapter' => $chapter,
            'authstatus' => $authstatus,
            'info' => $info,
        ]);

        return $this->fetch();
    }


    /**
     *学习感悟（评论）
     * @param int   user_id  用户ID
     * @param int   chapter_id 当前章节ID
     * @param   int course_id   当前课程ID
     * @param   string  content 评论内容
     */
    public function comment(){

        if(Request()->isPost()){
            $res = $this->request->except('s');

            $rule = [
                'content|内容' => 'require'
            ];
            $validate = new Validate($rule);
            if(!$validate->check($res)) return $this->return_msg(400,$validate->getError());
            $user = $this->getUserInfo();//获取当前用户信息
            $res['user_id'] = $user['id'];
            $res['createtime'] = time();
//            dump($res);
            $data = Db::name('comment_chapter')->insert($res);

            if($data) return $this->return_msg(200,'提交成功');
        }
    }

    /**
     * 全文分享
     * @return false|string
     */
    public function share()
    {
        $url = $this->request->request("urls", "", "trim");
        $jssdk = new Jssdk();
        $package = $jssdk->getSignedPackage($url);

        return json_encode($package);
    }



}